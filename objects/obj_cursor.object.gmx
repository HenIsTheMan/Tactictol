<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_check</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>grid = ds_grid_create(5,5);
gridCheck = ds_grid_create(5,5); //??
ds_grid_clear(grid,-5);
ds_grid_clear(gridCheck,0);
turn = choose(0,1);
block = 0;
time1 = 3;
time2 = 3;
placed = 0;
subimg = 0;
subimg1 = irandom(sprite_get_number(spr_symbols) - 1);
subimg2 = subimg1;
while(subimg2 == subimg1){
    subimg2 = irandom(sprite_get_number(spr_symbols) - 1);
}
pause = 0;
side = 0;
timer1 = 0;
timer2 = 0;
sidePressed = 0;
blind = 0;
turnPlaced = 0;
for(i = 0; i &lt; 25; i++){
    cShow[i] = 10;
    rShow[i] = 10;
}
layerDepth = irandom_range(1000000,1000006);
for(i = 1000000; i &lt; 1000007; i++){
    if(i != layerDepth){
        tile_layer_hide(i);
    }
}

virtual_key_add(64,128,32,32,ord("N"));
virtual_key_add(64,256,32,32,ord("P"));
key[0] = virtual_key_add(64,0,32,32,vk_shift);
key[1] = virtual_key_add(0,256,32,32,vk_space);
key[2] = virtual_key_add(128,256,32,32,vk_space);
key[3] = virtual_key_add(0,256,32,32,ord("C"));
key[4] = virtual_key_add(128,256,32,32,ord("V"));
key[5] = virtual_key_add(0,0,32,32,ord("T"));
key[6] = virtual_key_add(128,0,32,32,ord("Y"));
key[7] = virtual_key_add(0,128,32,32,ord("B"));
key[8] = virtual_key_add(128,128,32,32,ord("O"));
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(time1 != 0 &amp;&amp; time2 != 0 &amp;&amp; !pause){ //script??
    if(turn &amp; 1){
        time2--;
    } else{
        time1--;
    }
}
alarm[0] = 1000000/delta_time;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(keyboard_check_pressed(ord("P"))){
    if(subimg == 0){
        switch(pause){
            case 0: pause = 1; tile_layer_hide(layerDepth); break;
            case 1: pause = 0; tile_layer_show(layerDepth); break;
        }
    } else{
        audio_play_sound(snd_restart,0,0);
        scr_restart();
    }
}

if(subimg == 0){
    switch(pause){
        case 0: scr_game_step(); break;
        case 1: scr_pause_step(); break;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>switch(pause){
    case 0: scr_game_draw(); break;
    case 1: scr_pause_draw(); break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
